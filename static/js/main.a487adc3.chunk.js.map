{"version":3,"sources":["assets/images/logos/rmb7.png","assets/images/illustrations/feedback.svg","assets/images/logos/fresh-square.svg","assets/images/illustrations/blooming.svg","components/topBar/LoginLink.js","components/topBar/RegistrationLink.js","components/topBar/Logo.js","components/topBar/TopbarContainer.js","components/topBar/Topbar.js","components/HeroBody.js","components/ShowCases.js","components/authModal/LoginForm.js","components/authModal/Modal.js","components/Sidebar.js","components/BackToTop.js","components/footer/FooterSimple.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LoginLink","className","style","cursor","data-modal","id","RegistrationLink","Logo","href","src","RmbLogo","alt","TopbarContainer","role","aria-label","aria-expanded","data-target","aria-hidden","Topbar","HeroBody","intl","useIntl","transTitle","formatMessage","transSubTitle","transStartButton","feedback","data","title","description","image","ShowCases","transReview","transSubtitle","ProductCard","product","height","marginTop","map","item","index","key","LoginForm","transUserName","transEnterUsername","transPassword","transEnterPassword","transLoginButton","type","placeholder","Modal","transLogin","transRegister","data-tab","Sidebar","LogoSquare","BackToTop","display","FooterSimple","blooming","width","App","Boolean","window","location","hostname","match","messages","messages_de","messages_zh","language","navigator","split","ReactDOM","render","locale","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a487adc3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rmb7.627d88e8.png\";","module.exports = __webpack_public_path__ + \"static/media/feedback.a043d666.svg\";","module.exports = __webpack_public_path__ + \"static/media/fresh-square.6e1f465d.svg\";","module.exports = __webpack_public_path__ + \"static/media/blooming.0bf28f8a.svg\";","import React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nconst LoginLink = () => (\n    <span className=\"navbar-item is-secondary modal-trigger\"\n          style={{cursor: 'pointer'}}\n          data-modal=\"auth-modal\">\n        <FormattedMessage id=\"loginLink.login\"/>\n    </span>\n);\n\nexport default LoginLink;\n","import React from 'react';\nimport {FormattedMessage} from \"react-intl\";\n\nconst RegistrationLink = () => (\n    <div\n        className=\"navbar-item modal-trigger\"\n        data-modal=\"auth-modal\">\n        <span className=\"button signup-button rounded secondary-btn raised\">\n            <FormattedMessage id={'registrationLink.register'}/>\n        </span>\n    </div>\n);\n\nexport default RegistrationLink;\n","import React from 'react';\nimport RmbLogo from \"../../assets/images/logos/rmb7.png\";\n\nconst Logo = () => (\n    <a className=\"navbar-item\" href=\"/\">\n        <img src={RmbLogo} alt=\"rmb\"/>\n    </a>\n);\n\nexport default Logo;\n","import React from 'react';\nimport LoginLink from \"./LoginLink\";\nimport RegistrationLink from \"./RegistrationLink\";\nimport Logo from \"./Logo\";\n\n// eslint-disable-next-line\nconst TopbarContainer = () => (\n    <div className=\"container\">\n        <div className=\"navbar-brand\">\n            <Logo/>\n            <a className=\"navbar-item is-hidden-desktop is-hidden-tablet\" href=\"/#\">\n                {/*<SidebarToggleIcon/>*/}\n            </a>\n            <a role=\"button\" className=\"navbar-burger\" aria-label=\"menu\" aria-expanded=\"false\"\n               data-target=\"navbar-menu\" href=\"/#\">\n                <span aria-hidden=\"true\"></span>\n                <span aria-hidden=\"true\"></span>\n                <span aria-hidden=\"true\"></span>\n            </a>\n        </div>\n\n        <div id=\"navbar-menu\" className=\"navbar-menu is-static\">\n            <div className=\"navbar-start\">\n                <a className=\"navbar-item is-hidden-mobile\" href=\"/#\">\n                    {/*<SidebarToggleIcon/>*/}\n                </a>\n            </div>\n\n            <div className=\"navbar-end\">\n                <LoginLink/>\n                <RegistrationLink/>\n            </div>\n        </div>\n    </div>\n);\n\nexport default TopbarContainer;\n","import React from 'react';\nimport TopbarContainer from \"./TopbarContainer\";\n\nconst Topbar = () => (\n    <>\n        <nav className=\"navbar is-fresh is-transparent\" role=\"navigation\" aria-label=\"main navigation\">\n            <TopbarContainer/>\n        </nav>\n        <nav id=\"navbar-clone\" className=\"navbar is-fresh is-transparent\" role=\"navigation\"\n             aria-label=\"main navigation\">\n            <TopbarContainer/>\n        </nav>\n    </>\n);\n\nexport default Topbar;\n","import React from 'react';\nimport feedback from '../assets/images/illustrations/feedback.svg';\nimport {useIntl} from 'react-intl';\n\nconst HeroBody = () => {\n    const intl = useIntl();\n    const transTitle = intl.formatMessage({id: 'heroBody.title'});\n    const transSubTitle = intl.formatMessage({id: 'heroBody.subTitle'});\n    const transStartButton = intl.formatMessage({id: 'heroBody.startButton'});\n    return (\n        <>\n            <div className=\"hero-body\">\n                <div className=\"container\">\n                    <div className=\"columns is-vcentered\">\n                        <div className=\"column is-6 landing-caption\">\n                            <h1 className=\"title is-1 is-bold is-spaced\">\n                                {transTitle}\n                            </h1>\n                            <h2 className=\"subtitle is-5 is-muted\">\n                                {transSubTitle}\n                            </h2>\n                            <p>\n                            <span className=\"button cta rounded primary-btn raised\">\n                                {transStartButton}\n                            </span>\n                            </p>\n                        </div>\n                        <div className=\"column is-5 is-offset-1\">\n                            <figure className=\"image is-4by3\">\n                                <img src={feedback} alt=\"Description\"/>\n                            </figure>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default HeroBody;\n","import React from 'react';\nimport {useIntl} from 'react-intl';\n\nconst data = [\n    {\n        title: 'Rosenquarz Roller ',\n        description: 'Rosenquarz Roller und Gua Sha Jade Roller natürlicher Jade für Gesichtsmassagegerät Roller Massage',\n        image: 'https://images-na.ssl-images-amazon.com/images/I/61MGYpqrnaL._SL1000_.jpg',\n    },\n    {\n        title: 'GoZheec Handyhalterung',\n        description: '360°Drehbarer Handy Ständer Verstellbarer Handy Stativadapter mit Schraubenloch Faltbarer Smartphone Halterung für iPhone 11, 11 Pro, X, XS Max, Huawei (Schwarz)',\n        image: 'https://images-na.ssl-images-amazon.com/images/I/61oWqhxsalL._AC_SL1000_.jpg',\n    },\n    {\n        title: 'Eiswürfelformen Silikon XXL',\n        description: 'Eiswürfelformen Silikon XXL Eiswürfel Form Eiswürfelbehälter 2er Pack Eiswürfelbereiter 5 cm Große Eiskugeln Runde Eiskugelformer Ice Tray Ice Cube für Bier Cocktails Whisky',\n        image: 'https://images-na.ssl-images-amazon.com/images/I/61haVwIl8wL._AC_SL1000_.jpg',\n    },\n];\n\nconst ShowCases = () => {\n    const intl = useIntl();\n    const transReview = intl.formatMessage({id: 'showCases.startReview'});\n    const transTitle = intl.formatMessage({id: 'showCases.title'});\n    const transSubtitle = intl.formatMessage({id: 'showCases.subtitle'});\n\n    const ProductCard = ({product}) => {\n        const {title, image} = product;\n\n        return (\n            <div className=\"card is-bordered has-text-centered\">\n                <div className=\"card-image\">\n                    <img src={image} style={{height: \"200px\", marginTop: \"2rem\"}} alt=\"card foto\"/>\n                </div>\n                <div className=\"card-content\">\n                    <div className=\"media\">\n                        <div className=\"media-content has-text-centered\">\n                            <p className=\"title is-6\">{title}</p>\n                        </div>\n                    </div>\n                    <div className=\"card-action\">\n                        <span className=\"button secondary-btn\">{transReview}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"title-wrapper has-text-centered\">\n                    <h2 className=\"title is-2\">{transTitle}</h2>\n                    <h3 className=\"subtitle is-5\">{transSubtitle}</h3>\n                    <div className=\"divider is-centered\"></div>\n                </div>\n\n                <div className=\"content-wrapper\">\n                    <div className=\"columns\">\n                        {data.map((item, index) => (\n                            <div className=\"column\" key={index}>\n                                <ProductCard product={item}/>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n\n        </>\n    );\n};\n\nexport default ShowCases;\n","import React from 'react';\nimport {useIntl} from 'react-intl';\n\nconst LoginForm = () => {\n    const intl = useIntl();\n    const transUserName = intl.formatMessage({id: 'loginForm.username'});\n    const transEnterUsername = intl.formatMessage({id: 'loginForm.enterUsername'});\n    const transPassword = intl.formatMessage({id: 'loginForm.password'});\n    const transEnterPassword = intl.formatMessage({id: 'loginForm.enterPassword'});\n    const transLoginButton = intl.formatMessage({id: 'loginForm.login'});\n\n    return (\n        <>\n            <div className=\"field\">\n                <label>{transUserName}</label>\n                <div className=\"control\">\n                    <input type=\"text\" className=\"input is-medium\" placeholder={transEnterUsername}/>\n                </div>\n            </div>\n            <div className=\"field\">\n                <label>{transPassword}</label>\n                <div className=\"control\">\n                    <input type=\"password\" className=\"input is-medium\" placeholder={transEnterPassword}/>\n                </div>\n            </div>\n\n            <span className=\"button is-fullwidth secondary-btn is-rounded raised\">\n                {transLoginButton}\n            </span>\n        </>\n    );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport LoginForm from \"./LoginForm\";\nimport {useIntl} from 'react-intl';\n\nconst Modal = () => {\n    const intl = useIntl();\n    const transLogin = intl.formatMessage({id: \"modal.login\"});\n    const transRegister = intl.formatMessage({id: \"modal.register\"});\n\n    return (\n        <>\n            <div id=\"auth-modal\" className=\"modal\">\n                <div className=\"modal-background\"></div>\n                <div className=\"modal-content\">\n                    <div className=\"flex-card auth-card\">\n                        <div className=\"tabs-wrapper\">\n                            <div className=\"tabs\">\n                                <ul>\n                                    <li data-tab=\"login-tab\" className=\"is-active\">\n                                        <a href={'/#'}>{transLogin}</a>\n                                    </li>\n                                    <li data-tab=\"register-tab\">\n                                        <a href={'/#'}>{transRegister}</a>\n                                    </li>\n                                </ul>\n                            </div>\n                            <div id=\"login-tab\" className=\"tab-content is-active\">\n                                <LoginForm/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button className=\"modal-close is-large\" aria-label=\"close\"></button>\n            </div>\n        </>\n    );\n};\n\nexport default Modal;\n","import React from 'react';\nimport LogoSquare from '../assets/images/logos/fresh-square.svg';\n\nconst Sidebar = () => (\n    <div className=\"sidebar\">\n        <div className=\"sidebar-header\">\n            <img src={LogoSquare} alt={'RMB'}/>\n        </div>\n        <div className=\"inner\">\n            <ul className=\"sidebar-menu\">\n                <li>\n                    <span className=\"nav-section-title\"></span>\n                </li>\n                <li className=\"have-children\">\n                    <a href=\"https://cssninjastudio.github.io/#\">\n                        <span className=\"fa fa-user\"></span>User</a>\n                    <ul>\n                        <li><a href=\"https://cssninjastudio.github.io/#\">Profile</a></li>\n                        <li><a href=\"https://cssninjastudio.github.io/#\">Account</a></li>\n                        <li><a href=\"https://cssninjastudio.github.io/#\">Settings</a></li>\n                    </ul>\n                </li>\n            </ul>\n        </div>\n    </div>\n);\n\nexport default Sidebar;\n","import React from 'react';\n\nconst BackToTop = () => (\n    <div id=\"backtotop\">\n        <a href=\"/#\">\n            <span style={{display: 'none'}}>^</span>\n        </a>\n    </div>\n);\n\nexport default BackToTop;\n","import React from 'react';\nimport blooming from '../../assets/images/illustrations/blooming.svg';\n\nconst FooterSimple = () => (\n    <footer className=\"footer footer-dark\">\n        <div className=\"container\">\n            <div className=\"columns is-vcentered has-text-centered\">\n                <div className=\"column\">\n                    <img src={blooming} alt=\"blooming\" width=\"240\"/>\n                </div>\n                <div className=\"column\">\n                    <h3 className=\"title is-4 is-bold light-text\">\n                        R<span className=\"has-text-grey\">eview</span>\n                        M<span className=\"has-text-grey\">oney</span>\n                        B<span className=\"has-text-grey\">ack</span>\n                    </h3>\n                    <p>CopyRight © 2019, with <span role=\"img\" aria-label=\"heart\">❤️</span> in Berlin</p>\n                </div>\n            </div>\n        </div>\n    </footer>\n);\n\nexport default FooterSimple;\n","import React from 'react';\nimport Topbar from \"./components/topBar/Topbar\";\nimport HeroBody from \"./components/HeroBody\";\nimport ShowCases from \"./components/ShowCases\";\nimport AuthModal from \"./components/authModal/Modal\";\nimport Sidebar from \"./components/Sidebar\";\nimport BackToTop from \"./components/BackToTop\";\nimport FooterSimple from \"./components/footer/FooterSimple\";\n\nfunction App() {\n    return (\n        <>\n            <section className=\"hero is-default is-bold is-fullheight\">\n                <Topbar/>\n                <HeroBody/>\n            </section>\n\n            <section className=\"section section-light-grey is-medium\">\n                <ShowCases/>\n            </section>\n\n            {/*<section className=\"section is-medium\">*/}\n            {/*    <HowItWorks/>*/}\n            {/*</section>*/}\n\n            {/*<section className=\"section is-medium section-secondary\">*/}\n            {/*    <CustomerFeedbacks/>*/}\n            {/*</section>*/}\n\n            {/*<section className=\"section section-light-grey is-medium\">*/}\n            {/*    <ContactForm/>*/}\n            {/*</section>*/}\n\n            <AuthModal/>\n            <FooterSimple/>\n            <Sidebar/>\n\n            <BackToTop/>\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {IntlProvider} from 'react-intl';\nimport App from './App';\nimport messages_de from './translations/de';\nimport messages_zh from './translations/zh';\nimport * as serviceWorker from './serviceWorker';\n\nconst messages = {\n    'de': messages_de,\n    'zh': messages_zh,\n};\n\nconst language = navigator.language.split(/[-_]/)[0];\n\nReactDOM.render(\n    <IntlProvider locale={language} messages={messages[language] || messages['de']}>\n        <App/>\n    </IntlProvider>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}